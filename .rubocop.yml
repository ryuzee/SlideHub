# Disable rubocop-rails for Sider
# require: rubocop-rails
# target_version:
#   rubocop v0.76.0

# 自動生成されるものはチェック対象から除外する
AllCops:
  Exclude:
    - "vendor/**/*" # rubocop config/default.yml
    - "db/schema.rb"
    - "Vagrantfile"
  DisplayCopNames: true

# Rails用
# Rails:
#   Enabled: true
#   Exclude:
#     - "db/migrate/*"
#
# Rails/SkipsModelValidations:
#   Whitelist:
#     - "increment!"

##################### Gemspec ##################################
Gemspec/DateAssignment: # new in 1.10
  Enabled: true
Gemspec/RequireMFA: # new in 1.23
  Enabled: true

##################### Layout ##################################

# メソッドチェーンの改行は末尾に . を入れる
# REPL に貼り付けた際の暴発を防ぐため
Layout/DotPosition:
  EnforcedStyle: trailing

# 改行コードを明示
Layout/EndOfLine: 
  EnforcedStyle: lf

# 桁揃えが綺麗にならないことが多いので migration は除外
Layout/ExtraSpacing:
  Exclude:
    - "db/migrate/*.rb"

# ({ と hash を開始した場合に ( の位置にインデントさせる
# そもそも {} が必要ない可能性が高いが Style/BracesAroundHashParameters はチェックしないことにしたので
# Layout/IndentHash:
Layout/FirstHashElementIndentation:
  EnforcedStyle: consistent

# private/protected は一段深くインデントする
Layout/IndentationConsistency:
  EnforcedStyle: indented_internal_methods

# `||` も align に使うことがあるので追加する
Layout/SpaceAroundOperators:
  AllowForAlignment: true

# * migrate
# * jbuilder
# * model の association
# * controller の callback
# 辺りの桁揃えで引っかかるので全体的にチェックしない
Layout/SpaceBeforeFirstArg:
  Enabled: false

Layout/SpaceBeforeBrackets: # (new in 1.7)
  Enabled: true

# * 警告 120文字
# * 禁止 160文字
# のイメージ
Layout/LineLength:
  Max: 160
  Exclude:
    - "db/migrate/*.rb"
    - "spec/**/*"

Layout/LineEndStringConcatenationIndentation: # new in 1.18
  Enabled: true

##################### Style ##################################

# Accessorを1つの記述にまとめるかどうか
# まとめるとコメントが付けにくく見通しが悪くなるので無効にする
Style/AccessorGrouping:
  Enabled: false

# redirect_to xxx and return のイディオムを維持したい
Style/AndOr:
  EnforcedStyle: conditionals

# 日本語のコメントを許可する
Style/AsciiComments:
  Enabled: false

# do .. end から更にメソッドチェーンすると見づらいので
# auto-correct せず、自分で修正する
# spec 内は見た目が綺麗になるので許可
Style/BlockDelimiters:
  AutoCorrect: false
  Exclude:
    - "spec/**/*"

# option 等、明示的にハッシュにした方が分かりやすい場合もある
# Style/BracesAroundHashParameters:
#   Enabled: false

# Style/CollectionMethods 自体は無効になっているのだが、
#   https://github.com/bbatsov/rubocop/issues/1084
#   https://github.com/bbatsov/rubocop/issues/1334
# Performance/Detect がこの設定値を見るので PreferredMethods だけ変更しておく。
#
# デフォルト値から変えたのは
#   find -> detect
#     ActiveRecord の find と間違えやすいため
#   reduce -> inject
#     detect, reject, select と並べたときに韻を踏んでいるため。
#     collect -> map を維持しているのは文字数が圧倒的に少ないため。
Style/CollectionMethods:
  PreferredMethods:
    detect: "detect"
    find: "detect"
    inject: "inject"
    reduce: "inject"

# Hash#has_key? があるかどうかを調べる
Style/PreferredHashMethods:
  Enabled: true

# ドキュメントの無い public class を許可する
Style/Documentation:
  Enabled: false

# !! のイディオムは積極的に使う
Style/DoubleNegation:
  Enabled: false

# 明示的に else で nil を返すのは分かりやすいので許可する
Style/EmptyElse:
  EnforcedStyle: empty

# いずれかに揃えるのならば `sprintf` や `format` より String#% が好きです
Style/FormatString:
  EnforcedStyle: percent

# 文字列のフリーズフラグの有無を気にしないようにする
Style/FrozenStringLiteralComment:
  Enabled: false

# if 文の中に 3 行程度のブロックを書くぐらいは許容した方が現実的
Style/GuardClause:
  MinBodyLength: 5

# rake タスクの順序の hash は rocket を許可する
Style/HashSyntax:
  Exclude:
    - "**/*.rake"
    - "Rakefile"

# 条件式の方を意識させたい場合には後置の if/unless を使わない方が分かりやすい
Style/IfUnlessModifier:
  Enabled: false

# scope 等は複数行でも lambda ではなく ->{} で揃えた方が見た目が綺麗
Style/Lambda:
  Enabled: false

# 複数行にまたがる後置条件を警告する
Style/MultilineIfModifier:
  Enabled: false

# 1_000_000 と区切り文字が 2 個以上必要になる場合のみ _ 区切りを必須にする
Style/NumericLiterals:
  MinDigits: 7

# 正規表現にマッチさせた時の特殊変数の置き換えは Regex.last_match ではなく
# 名前付きキャプチャを使って参照したいので auto-correct しない
Style/PerlBackrefs:
  AutoCorrect: false

# 特に model 内において、ローカル変数とメソッド呼び出しの区別をつけた方が分かりやすい場合が多い
Style/RedundantSelf:
  Enabled: false

# 受け取り側で multiple assignment しろというのを明示
Style/RedundantReturn:
  AllowMultipleReturnValues: true

# spec 内は見た目が綺麗になるので許可
Style/Semicolon:
  Exclude:
    - "spec/**/*"

# fail と使い分ける必要ナシ
Style/SignalException:
  EnforcedStyle: only_raise

# * 式展開したい場合だけダブルクォートにする
# * それ以外ではシングルクォートを強制
Style/StringLiterals:
  EnforcedStyle: single_quotes

# auto-correct 時に Style/StringLiterals とカニバって無限ループになる (v0.28.0)
Style/StringLiteralsInInterpolation:
  Enabled: false

# いくらなんでも inject { |a, e| } は短すぎるので分かりやすい名前をつけたい
Style/SingleLineBlockParams:
  Enabled: false

# 複数行の場合はケツカンマを入れる
Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

# クラスやモジュールのネスト定義
# 動作に影響があるので無効にする
Style/ClassAndModuleChildren:
  Enabled: false
  EnforcedStyle: nested
  SupportedStyles:
    - nested
    - compact

# シンボルのみで構成される配列に%iまたは%Iをつけるか
Style/SymbolArray:
  Enabled: false

# includeを許可しない
Style/MixinUsage:
  Include:
    - app/**/*.rb

# For rubocop < 1.0.0
Style/HashEachMethods:
  Enabled: true

# For rubocop < 1.0.0
Style/HashTransformKeys:
  Enabled: true

# For rubocop < 1.0.0
Style/HashTransformValues:
  Enabled: true

Style/ArgumentsForwarding: # (new in 1.1)
  Enabled: true
Style/CollectionCompact: # (new in 1.2)
  Enabled: true
Style/DocumentDynamicEvalDefinition: # (new in 1.1)
  Enabled: true
Style/HashExcept: # (new in 1.7)
  Enabled: true
Style/NegatedIfElseCondition: # (new in 1.2)
  Enabled: true
Style/NilLambda: # (new in 1.3)
  Enabled: true
Style/RedundantArgument: # (new in 1.4)
  Enabled: true
Style/SwapValues: # (new in 1.1)
  Enabled: true
Style/EndlessMethod: # new in 1.8
  Enabled: true
Style/FetchEnvVar: # new in 1.28
  Enabled: true
Style/FileRead: # new in 1.24
  Enabled: true
Style/FileWrite: # new in 1.24
  Enabled: true
Style/HashConversion: # new in 1.10
  Enabled: true
Style/IfWithBooleanLiteralBranches: # new in 1.9
  Enabled: true
Style/InPatternThen: # new in 1.16
  Enabled: true
Style/MapToHash: # new in 1.24
  Enabled: true
Style/MultilineInPatternThen: # new in 1.16
  Enabled: true
Style/NestedFileDirname: # new in 1.26
  Enabled: true
Style/NumberedParameters: # new in 1.22
  Enabled: true
Style/NumberedParametersLimit: # new in 1.22
  Enabled: true
Style/ObjectThen: # new in 1.28
  Enabled: true
Style/OpenStructUse: # new in 1.23
  Enabled: true
Style/QuotedSymbols: # new in 1.16
  Enabled: true
Style/RedundantInitialize: # new in 1.27
  Enabled: true
Style/RedundantSelfAssignmentBranch: # new in 1.19
  Enabled: true
Style/SelectByRegexp: # new in 1.22
  Enabled: true
Style/StringChars: # new in 1.12
  Enabled: true

##################### Lint ##################################

# * 同名のメソッドがある場合にローカル変数に `_` を付ける
# * 一時変数として `_` を付ける
# というテクニックは頻出する
Lint/UnderscorePrefixedVariableName:
  Enabled: false

# 子クラスで実装させるつもりのメソッドで引っかかるので
Lint/UnusedMethodArgument:
  Enabled: false

Lint/AmbiguousAssignment: # (new in 1.7)
  Enabled: true
Lint/DuplicateBranch: # (new in 1.3)
  Enabled: true
Lint/DuplicateRegexpCharacterClassElement: # (new in 1.1)
  Enabled: true
Lint/EmptyBlock: # (new in 1.1)
  Enabled: true
Lint/EmptyClass: # (new in 1.3)
  Enabled: true
Lint/NoReturnInBeginEndBlocks: # (new in 1.2)
  Enabled: true
Lint/ToEnumArguments: # (new in 1.1)
  Enabled: true
Lint/UnexpectedBlockArity: # (new in 1.5)
  Enabled: true
Lint/UnmodifiedReduceAccumulator: # (new in 1.1)
  Enabled: true
Lint/AmbiguousOperatorPrecedence: # new in 1.21
  Enabled: true
Lint/AmbiguousRange: # new in 1.19
  Enabled: true
Lint/DeprecatedConstants: # new in 1.8
  Enabled: true
Lint/EmptyInPattern: # new in 1.16
  Enabled: true
Lint/IncompatibleIoSelectWithFiberScheduler: # new in 1.21
  Enabled: true
Lint/LambdaWithoutLiteralBlock: # new in 1.8
  Enabled: true
Lint/NumberedParameterAssignment: # new in 1.9
  Enabled: true
Lint/OrAssignmentToConstant: # new in 1.9
  Enabled: true
Lint/RedundantDirGlobSort: # new in 1.8
  Enabled: true
Lint/RefinementImportMethods: # new in 1.27
  Enabled: true
Lint/RequireRelativeSelfPath: # new in 1.22
  Enabled: true
Lint/SymbolConversion: # new in 1.9
  Enabled: true
Lint/TripleQuotes: # new in 1.9
  Enabled: true
Lint/UselessRuby2Keywords: # new in 1.23
  Enabled: true

##################### Metrics ##################################

# 30 まではギリギリ許せる範囲だった
Metrics/AbcSize:
  Max: 30

# ブロックの長さは短く。ただしテストやタスクは除く
Metrics/BlockLength:
  Max: 20
  Exclude:
    - "config/environments/*.rb"
    - "config/routes.rb"
    - "config/initializers/devise.rb"
    - "lib/tasks/**/*.rb"
    - "lib/tasks/**/*.rake"
    - "spec/**/*.rb"
    - "Gemfile"

# 6 は強すぎるので緩める
Metrics/CyclomaticComplexity:
  Max: 10

# 20 行超えるのは migration ファイル以外滅多に無い
Metrics/MethodLength:
  Max: 20
  Exclude:
    - "db/migrate/*.rb"

# 分岐の数。ガード句を多用しているとデフォルト 7 だと厳しい
Metrics/PerceivedComplexity:
  Max: 8

# 引数の数
Metrics/ParameterLists:
  Max: 6

##################### Naming ##################################

# has_ から始まるメソッドは許可する
Naming/PredicateName:
  ForbiddenPrefixes:
    - "is_"
    - "have_"
  NamePrefix:
    - "is_"
    - "have_"

##################### Security ##################################

Naming/BlockForwarding: # new in 1.24
  Enabled: true

Security/CompoundHash: # new in 1.28
  Enabled: true
Security/IoMethods: # new in 1.22
  Enabled: true
